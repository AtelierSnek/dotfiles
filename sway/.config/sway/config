### Import our colorscheme
include $HOME/.cache/wal/colors-sway

client.focused $color3 $color0 $foreground
client.urgent $color3 $color3 $foreground

# Set our mod of choice
set $mod Mod4

# Home row direction keys, unlike vim
set $left j
set $down k
set $up i
set $right l


# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
#font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
font pango:Terminus 10

#Device-Specific Display and Input options

output * {
  background $wallpaper fill
}

input type:keyboard {
  repeat_delay 250
  repeat_rate 24
}

input type:touchpad {
  natural_scroll enabled
  click_method clickfinger
  scroll_factor 0.2
  accel_profile adaptive
}

include sway-io

# Start mako when sway starts
exec_always --no-startup-id mako

# Start up workstyle if we have it
exec_always --no-startup-id workstyle &> /tmp/workstyle.log

# Rin tzupdate so that we can change our timezone if we're travelling
exec_always --no-startup-id tzupdate -s 10

# Use pactl to adjust volume in PulseAudio.
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +2%
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -2%
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle

# Prevent following the mouse
focus_follows_mouse no

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod
### Idle configuration
#
exec swayidle -w \
   timeout 1800 'swaylock -f -i $wallpaper' \
   timeout 600 'swaymsg "output * dpms off"' \
   resume 'swaymsg "output * dpms on"' \
   before-sleep 'swaylock -f -i $wallpaper' \
   lock 'swaylock -f -i $wallpaper'

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
# bindsym $mod+d exec --no-startup-id "dmenu_run -nf '#BBBBBB' -nb '#222222' -sb '#005577' -sf '#EEEEEE' -fn 'monospace-10'"
# A more modern dmenu replacement is rofi:
bindsym $mod+d exec --no-startup-id rofi -show drun -run-shell-command 'kitty -e zsh -ic "{cmd} && read"'  | xargs swaymsg --

# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle
# focus the parent container
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+Shift+a focus child

# Opacity Controls
bindsym $mod+Ctrl+Equal opacity plus 0.05
bindsym $mod+Ctrl+Minus opacity minus 0.05

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10
bindsym $mod+Equal scratchpad show


### Laptop Settings ###

# gesture controls for workspace switch (natural scrolling)
bindgesture swipe:3:right workspace prev
bindgesture swipe:3:left workspace next
bindgesture swipe:4:up move container to scratchpad
bindgesture swipe:4:down scratchpad show

# Mode switch controls
bindswitch --locked lid:on exec systemctl suspend


# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10
bindsym $mod+Shift+Equal move container to scratchpad

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# reload the configuration file
bindsym $mod+Shift+c reload
# restart sway inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit sway (logs you out of your X session)
bindsym $mod+Shift+e exec "swaynag -t warning -m 'Do you really want to exit sway?' -B 'Yes, exit sway' 'swaymsg exit'"

bindsym --locked --no-repeat $mod+Shift+z exec "rofi -show power-menu -modi power-menu:rofi-power-menu"

# resize window (you can also use the mouse for that)
mode "resize" {
  # These bindings trigger as soon as you enter the resize mode

  # same bindings, but for the arrow keys
  bindsym Left resize shrink width 10 px or 10 ppt
  bindsym Right resize grow width 10 px or 10 ppt
  bindsym Down resize shrink height 10 px or 10 ppt
  bindsym Up resize grow height 10 px or 10 ppt

  # back to normal: Enter or Escape or $mod+r
  bindsym Return mode "default"
  bindsym Escape mode "default"
  bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Sticky toggle
bindsym $mod+Alt+S sticky toggle

# Keyboard Brightness
bindcode 238 exec asusctl -n
bindcode 237 exec asusctl -p

# Screen Brightness

bindsym XF86MonBrightnessUp exec light -A 10
bindsym XF86MonBrightnessDown exec light -U 10

bindsym Ctrl+XF86MonBrightnessUp exec light -A 5
bindsym Ctrl+XF86MonBrightnessDown exec light -U 5

# ==== Terminals ====
# start a terminal
bindsym $mod+Return exec kitty

# ==== Class Assignments & Window Options ====
# TODO: Add more of these
# Assign Applications to default locations
assign {
  [class="Vivaldi"] number $ws2
  [class="discord"] number $ws3
  [class="vesktop"] number $ws3
  [app_id="vesktop"] number $ws3
  [class="Signal"] number $ws4
  [class="Steam"] number $ws5
  [title="Steam"] number $ws5
  [class="Plex"]  number $ws6
  [class="Cider"] number $ws10
}

# Certain Windows should float by default
for_window {
  [title="Activation"] floating enable
  [class="Synthesizer V Studio Pro"] floating enable
  [title="Steam - News"] floating enable
  [title="Steam Settings"] floating enable
  [title="Friends List"] floating enable
  [title="SteamTinkerLaunch"] floating enable
}

# Sticky Windows
for_window [instance="file_progress"] sticky enable

# Floating Windows should have a title
for_window {
  [floating class="discord"] border none; opacity 0.75
  [floating] border normal
}

#Don't automatically focus on popped windows
no_focus {
  [window_role="pop-up"]
  [window_role="splash"]
}

no_focus [window_role="splash"]

#Inhibit Idling if:
for_window {
  [class="Plex"] inhibit_idle visible
  [floating class="discord"] inhibit_idle visible
  [floating class="vesktop"] inhibit_idle visible
}

# ==== Window Urgency ====

# Allow switching to the calling program when clicking on mako notifs
focus_on_window_activation focus

# ==== Screenshot stuff ====
bindsym Shift+Alt+1 exec grim -t png $HOME/Pictures/ss-$(date +%Y-%m-%d_%H-%M-%S).png
bindsym Shift+Alt+2 exec grim -t png -g "$(slurp)" $HOME/Pictures/ss-$(date +%Y-%m-%d_%H-%M-%S).png
bindsym Shift+Alt+3 exec grim -t png - | wl-copy
bindsym Shift+Alt+4 exec grim -t png -g "$(slurp)" - | wl-copy
# ==== Aesthetic stuff ====

gaps inner 3
gaps outer 3


for_window {
  [app_id="kitty"] border none; blur enable; blur_passes 3; blur_radius 2; blur_brightness 0.9; opacity 0.9
  [app_id="code-oss"] blur enable; blur_passes 3; blur_radius 2; blur_brightness 0.9; opacity 0.9
}

corner_radius 12

shadows on

layer_effects "notifications" {
  blur enable;
  corner_radius 12;
  blur_ignore_transparent enable
}

default_dim_inactive 0.10

default_border pixel 1

hide_edge_borders both

bar {
  swaybar_command waybar
  workspace_buttons yes
}

include /etc/sway/config.d/*
